!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.events=t():e.events=t()}(self,(function(){return(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{EventHandler:()=>n,EventTarget:()=>i});class n{constructor(e,t){this.id=String(n._nextID++),t&&(e=e.bind(t)),this.handler=e}}function r(e){return this instanceof r?(this.v=e,this):new r(e)}n._nextID=0,Object.create,Object.create;class i{constructor(){this._events={}}addListener(e,t){this._events[e]||(this._events[e]={}),this._events[e][t.id]=t}removeListener(e,t){if(this._events[e]){delete this._events[e][t.id];let n=0;for(const e in this._events)n++;0===n&&delete this._events[e]}}dispatchEvent(e,...t){if(this._events[e])for(const n in this._events[e])this._events[e][n].handler(...t)}getEventPromise(e){return new Promise((t=>{const r=new n(((...n)=>{this.removeListener(e,r),t(n)}));this.addListener(e,r)}))}getAsyncGenerator(e){return function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var i,s=n.apply(e,t||[]),o=[];return i={},c("next"),c("throw"),c("return"),i[Symbol.asyncIterator]=function(){return this},i;function c(e){s[e]&&(i[e]=function(t){return new Promise((function(n,r){o.push([e,t,n,r])>1||f(e,t)}))})}function f(e,t){try{(n=s[e](t)).value instanceof r?Promise.resolve(n.value.v).then(a,u):d(o[0][2],n)}catch(e){d(o[0][3],e)}var n}function a(e){f("next",e)}function u(e){f("throw",e)}function d(e,t){e(t),o.shift(),o.length&&f(o[0][0],o[0][1])}}(this,arguments,(function*(){let t;const i=new n(((...n)=>{this.removeListener(e,i),t(n)}));this.addListener(e,i);try{for(;;)yield yield r(yield r(new Promise((e=>t=e))))}finally{this.removeListener(e,i)}}))}getEvents(){return this._events}}return t})()}));